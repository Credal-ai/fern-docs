service:
  base-path: /v0/search
  auth: true
  endpoints:
    searchDocumentCollection:
      path: /searchDocumentCollection
      docs: Search across all documents in a document collection using the document metadata and contents.
      method: POST
      request:
        name: SearchDocumentCollectionRequest
        body:
          properties:
            documentCollectionId:
              type: uuid
            searchQuery:
              type: string
            userEmail:
              type: string
              docs: |
                The email of the user making the search request for permissions reduction.
            structuredQueryFilters:
              type: list<SingleFieldFilter>
              docs: |
                The structured query filters to apply to the search query.
            searchOptions:
              type: optional<DocumentCollectionSearchOptions>
            metadataFilterExpression:
              type: optional<string>
              availability: deprecated
              docs: |
                Legacy metadata filter expression to apply to the search query. Use structuredQueryFilters instead.
      response: SearchDocumentCollectionResponse
      examples:
        - name: searchDocumentCollectionExample
          request:
            documentCollectionId: 82e4b12a-6990-45d4-8ebd-85c00e030c24
            searchQuery: "ABC Corp"
            structuredQueryFilters:
              - field: "status"
                operator: "=="
                value: "Open"
            userEmail: "jack@credal.ai"
            searchOptions:
              maxChunks: 10
              mergeContents: true
              threshold: 0.8
              enableSmartFiltering: true
              enableQueryExtraction: true
              enableReranking: true
          response:
            body:
              searchId: 76b534be-5d5c-11ee-b268-87f1fd934c81
              results:
                - documentId: 82e4b12a-6990-45d4-8ebd-85c00e030c24
                  documentName: "ABC Corp - Initial meeting transcript"
                  documentMetadata:
                    customerName: "ABC Corp"
                    meetingDate: "2021-01-01T00:00:00Z"
                  chunks:
                    - chunkId: 8d49fa7e-f09a-4bd4-ae94-4c089c9043a0
                      chunkIndex: 0
                      text: "Lorem ipsum dolor sit amet, consectetur adipiscing elit"
                      score: 0.9
                    - chunkId: c24f99f9-2477-461b-8f8f-90a82a40879d
                      chunkIndex: 1
                      text: "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore"
                      score: 0.8
                    - chunkId: 6413d18c-b37f-4985-9045-cc8d6e100a17
                      chunkIndex: 2
                      text: "sunt in culpa qui officia deserunt mollit anim id est laborum."
                      score: 0.7
                  mergedContents: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore. sunt in culpa qui officia deserunt mollit anim id est laborum.
                - documentId: 90998ceb-1c10-4d2a-96cb-acf89fa3005e
                  documentName: "XYZ Corp - Follow-up transcript"
                  documentMetadata:
                    customerName: "XYZ Corp"
                    meetingDate: "2021-01-02T00:00:00Z"
                  chunks:
                    - chunkId: 3664912a-3edb-4d88-b624-80db99d383e6
                      chunkIndex: 0
                      text: "Lorem ipsum dolor sit amet, consectetur adipiscing elit"
                      score: 0.7
                    - chunkId: da9d43a4-2927-442c-8e5c-b9ef86f56fc3
                      chunkIndex: 1
                      text: "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore"
                      score: 0.9
                    - chunkId: 8d882e9f-8eda-479b-ae2a-359ebae7b626
                      chunkIndex: 2
                      text: "sunt in culpa qui officia deserunt mollit anim id est laborum."
                      score: 0.75
                  mergedContents: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore. sunt in culpa qui officia deserunt mollit anim id est laborum.
types:
  DocumentCollectionSearchOptions:
    properties:
      maxChunks:
        type: optional<integer>
        docs: |
          The maximum number of chunks to return. Defaults to 10.
      mergeContents:
        type: optional<boolean>
        docs: |
          Whether to merge the chunks for a document and just return one result per document. Defaults to false.
      threshold:
        type: optional<double>
        docs: |
          The similarity threshold between 0 and 1 for the search results. A higher number leads to fewer but more relevant results. 
          Defaults to 0.45.
      enableSmartFiltering:
        type: optional<boolean>
        docs: |
          Whether to automatically filter the search results based on the user query and available metadata on the collection. Defaults to false.
      enableQueryExtraction:
        type: optional<boolean>
        docs: /
          Whether to extract search terms from the user query and use them for semantic search. Defaults to false.
      enableReranking:
        type: optional<boolean>
        docs: |
          Whether to rerank the search results after the initial semantic search query. Defaults to false.
  SearchDocumentCollectionResponse:
    properties:
      searchId: uuid
      results: list<DocumentCollectionSearchResult>
  DocumentCollectionSearchResult:
    properties:
      documentId: uuid
      documentName: string
      documentMetadata: map<string, string>
      chunks: list<SearchResultChunk>
      mergedContents: optional<string>
  SearchResultChunk:
    properties:
      chunkId: uuid
      chunkIndex: integer
      text: string
      score:
        type: double
        docs: |
          The similarity score between 0 and 1 for the search result. A higher number means the chunk is more relevant to the search query.
  Operator:
    enum:
      - name: LESS_THAN
        value: "<"
      - name: GREATER_THAN
        value: ">"
      - name: LESS_THAN_OR_EQUAL
        value: "<="
      - name: GREATER_THAN_OR_EQUAL
        value: ">="
      - name: NOT_EQUAL
        value: "!="
      - name: EQUAL
        value: "=="
      - name: CONTAINS
        value: "contains"
  SingleFieldFilter:
    properties:
      field: string
      operator: Operator
      value: string
