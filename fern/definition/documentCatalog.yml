service:
  base-path: /v0/catalog
  auth: true
  endpoints:
    uploadDocumentUrl:
      path: /uploadDocumentUrl
      display-name: Upload Document URL
      docs: Upload a document using its URL.
      method: POST
      request:
        name: UploadDocumentUrlRequest
        body:
          properties:
            documentUrl:
              type: string
              docs: /
                The URL for the document you want to upload. Credal will automatically connect to source systems like Google Drive, Office 365, Confluence, etc. to fetch and upload the document contents.
            documentName:
              type: string
              docs: /
                The name of the document you want to upload.
            uploadAsUserEmail:
              type: optional<string>
              docs: /
                The user email to upload this document for. This user will be the owner of the document. User must be a collaborator on the API key.
            documentExternalId:
              type: optional<string>
              docs: /
                The external id of the document you want to upload. Uploads to the same external id will update one document in Credal.
            documentExternalUrl:
              type: optional<string>
              docs: /
                The external URL of the document you want to upload. If provided Credal will link to this URL.
            customMetadata:
              type: optional<unknown>
              docs: /
                Optional JSON representing any custom metdata for this document
            collectionId:
              type: optional<string>
              docs: /
                If specified, document will also be added to a particular document collection
            forceUpdate:
              type: optional<boolean>
              docs: /
                If specified, document contents will be re-uploaded and re-embedded even if the document already exists in Credal
            internalPublic:
              type: optional<boolean>
              docs: /
                If specified, document will be accessible to everyone within the organization of the uploader
      response: UploadDocumentResponse
      examples:
        - name: Example0
          request:
            documentUrl: https://docs.google.com/document/d/170NrBm0Do7gdzvr54UvyslPVWkQFOA0lgNycFmdZJQr
            documentName: Q1 Team Planning
            allowedUsersEmailAddresses: ["jack@credal.ai", "ravin@credal.ai"]
          response:
            body:
              documentId: 82e4b12a-6990-45d4-8ebd-85c00e030c24
    uploadDocumentContents:
      path: /uploadDocumentContents
      method: POST
      request:
        name: UploadDocumentContentsRequest
        body:
          properties:
            documentName:
              type: string
              docs: /
                The name of the document you want to upload.
            documentContents:
              type: string
              docs: /
                The full LLM-formatted text contents of the document you want to upload.
            allowedUsersEmailAddresses:
              type: list<string>
              docs: /
                Users allowed to access the document. Unlike Credal's out of the box connectors which reconcile various permissions models from 3rd party software, for custom uploads the caller is responsible for specifying who can access the document and currently flattening groups if applicable. Documents can also be marked as internal public.
            documentExternalId:
              type: optional<string>
              docs: /
                The external id of the document you want to upload. Uploads to the same external id will update one document in Credal.
            documentExternalUrl:
              type: optional<string>
              docs: /
                The external URL of the document you want to upload. If provided Credal will link to this URL.
            customMetadata:
              type: optional<unknown>
              docs: /
                Optional JSON representing any custom metdata for this document
            collectionId:
              type: optional<string>
              docs: /
                If specified, document will also be added to a particular document collection
            forceUpdate:
              type: optional<boolean>
              docs: /
                If specified, document contents will be re-uploaded and re-embedded even if the document already exists in Credal
            internalPublic:
              type: optional<boolean>
              docs: /
                If specified, document will be accessible to everyone within the organization of the uploader
      response: UploadDocumentResponse
      examples:
        - name: Example1
          request:
            documentName: My Document
            documentContents: Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
            allowedUsersEmailAddresses: ["jack@credal.ai", "ravin@credal.ai"]
          response:
            body:
              documentId: 82e4b12a-6990-45d4-8ebd-85c00e030c24
    uploadDocumentFile:
      path: /uploadDocumentFile
      method: POST
      availability: deprecated
      request:
        name: UploadDocumentFileRequest
        body:
          properties:
            document:
              type: file
              docs: |
                The document file you want to upload. Credal will parse the file contents and upload it.
      response: UploadDocumentResponse
      examples:
        - name: Example2
          request: {}
          response:
            body:
              documentId: 82e4b12a-6990-45d4-8ebd-85c00e030c24

types:
  UploadDocumentResponse:
    properties:
      documentId: uuid
